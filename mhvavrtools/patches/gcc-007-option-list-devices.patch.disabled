--- gcc/config/avr/avr.c.orig	2011-03-30 14:12:58 +1100
+++ gcc/config/avr/avr.c	2011-03-30 14:16:31 +1100
@@ -258,7 +258,24 @@
  
    return default_fixed_point_supported_p ();
  }
- 
+
+/* Implement TARGET_HELP.  */
+void
+avr_target_help (void)
+{
+  if (avr_list_supported_parts)
+    {
+      const struct mcu_type_s *list_part;
+      fprintf (stdout, "List of parts supported by avr-gcc:\n");
+      for (list_part = &avr_mcu_types[0]; (list_part + 1)->name; list_part++)
+        {
+          if (!list_part->macro)
+            list_part++;
+          fprintf (stdout, "%-20s%s\n", list_part->name, list_part->macro);
+        }
+        fprintf (stdout, "\n");
+    }
+} 
  
 struct gcc_target targetm = TARGET_INITIALIZER;
 
@@ -960,6 +977,8 @@
   fprintf (file, ".L__stack_usage = %d\n", cfun->machine->stack_usage);
 }
 
+#undef TARGET_HELP
+#define TARGET_HELP avr_target_help
 
 /* Implement EPILOGUE_USES.  */
 
--- gcc/config/avr/avr.opt.orig	2011-01-04 07:52:22 +1100
+++ gcc/config/avr/avr.opt	2011-03-30 14:17:29 +1100
@@ -58,3 +58,7 @@
 mpmem-wrap-around
 Target Report
 Make the linker relaxation machine assume that a program counter wrap-around occurs.
+
+mlist-devices
+Target RejectNegative Var(avr_list_supported_parts)
+Print the list of parts supported while printing --target-help
